Metadata-Version: 1.1
Name: ageliaco.recipe.csvconfig
Version: 0.1
Summary: Use a CSV file to populate buildout templates
Home-page: http://svn.plone.org/svn/collective/
Author: UNKNOWN
Author-email: UNKNOWN
License: ZPL
Description: .. contents::
        
        .. Note to recipe author!
           ---------------------
           Update the following URLs to point to your:
           
           - code repository
           - bug tracker 
           - questions/comments feedback mail 
           (do not set a real mail, to avoid spams)
        
           Or remove it if not used.
        
        - Code repository: http://svn.somewhere.com/...
        - Questions and comments to somemailing_list
        - Report bugs at http://bug.somewhere.com/..
        
        
        Detailed Documentation
        **********************
        
        Supported options
        =================
        
        The recipe supports the following options:
        
        .. Note to recipe author!
           ----------------------
           For each option the recipe uses you should include a description
           about the purpose of the option, the format and semantics of the
           values it accepts, whether it is mandatory or optional and what the
           default value is if it is omitted.
        
        option1
            Description for ``option1``...
        
        option2
            Description for ``option2``...
        
        
        Example usage
        =============
        
        .. Note to recipe author!
           ----------------------
           zc.buildout provides a nice testing environment which makes it
           relatively easy to write doctests that both demonstrate the use of
           the recipe and test it.
           You can find examples of recipe doctests from the PyPI, e.g.
           
             http://pypi.python.org/pypi/zc.recipe.egg
        
           The PyPI page for zc.buildout contains documentation about the test
           environment.
        
             http://pypi.python.org/pypi/zc.buildout#testing-support
        
           Below is a skeleton doctest that you can start with when building
           your own tests.
        
        We'll start by creating a buildout that uses the recipe::
        
            >>> write('buildout.cfg',
            ... """
            ... [buildout]
            ... parts = test1
            ...
            ... [test1]
            ... recipe = ageliaco.recipe.csvconfig
            ... option1 = %(foo)s
            ... option2 = %(bar)s
            ... """ % { 'foo' : 'value1', 'bar' : 'value2'})
        
        Running the buildout gives us::
        
            >>> print 'start', system(buildout) 
            start...
            Installing test1.
            Unused options for test1: 'option2' 'option1'.
            <BLANKLINE>
        
        
        
        Contributors
        ************
        
        "", Author
        
        
        Change history
        **************
        
        0.1 (xxxx-xx-xx)
        ----------------
        
        - Created recipe with ZopeSkel
          [""]
        
        Download
        ********
        
Platform: UNKNOWN
Classifier: Framework :: Buildout
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: Zope Public License
